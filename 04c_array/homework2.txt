1、编写程序，找出用户输入的一串数中的最大数。程序需要提示用户一个一个地输入数，当用户输入0或负数时，程序显示出已输入的最大非负数。
2、编写程序，要求用户输入两个整数，然后计算并显示这两个整数的最大公约数。
	提示：最大公约数的经典算法是辗转相除法，方法如下：
		分别让变量m和n存储两个数的值。如果n为0，那么停止操作，m中的值就是最大公约数，否则计算m除以n的余数，把n保存到m中，关把余数保存在n中。然后重复上述过程，每次先判断n是否为0;
3、编写程序显示单月的日历。用户指定这个月的天数和该月的起始日是星期。
	提示：重要的是一个使用变量i从1计数到n的for(n指月的开数),for语句中需要显示i的每个值。在循环中，用if语句判定i是否是一个星期的最后一天，如果是，就显示一个换行符。
4、二进制位查看器
	编写程序实现一个简单的二进制位查看器，要求程序运行时从命令行输入一个整数，将其在内存中的二进制位的形式输出出来。
5、网络新手的原型是一个名为B1FF的人，他有一种独特的编写消息的方法。下面是一条常见的B1FF的公告：
	H3Y DUD3, C 15 R1LLY C00L!!!!!!!!!!
	编写一个"B1FF过滤器",可以读取用户录入的消息并把此消息翻译成B1FF的表达风格：
		输入消息：Hey dude, C is rilly cool
		输出B1FF: H3Y DUD3, C 15 R1LLY C00L!!!!!!!!!!
	程序需要把消息转换成大写，用数字代替特定字母(A->4, B->8, E->3, I->1, O->0, S->5),然后添加10个感叹号。
	提示：把原消息存储在一个数组中，然后从数组头开始逐个翻译并显示字符。
6、已知的最古老的一种加密算法技术是凯撒加密。该方法把一条消息中的每个字母用字母表中固定距离之后的那个字母来替代。(如果越过Z,会绕回到字母表的起始位置。例如，如果每个字母都用字母表中两个位置之后的字母代替，那么Y就被替为A, Z就被替为B.)编写程序用凯撒加密算法对消息进行加密。用户输入待加密的消息和移位计数(字母移动的位置数目):
	输入待加密的消息：Go ahead, make my day.
	输入移位数：3
	加密后的消息：    Jr dkhdg, pdnh pb gdb.
  注意：当用户输入26与移位计数的差值时，程序可以对消息进行解密：
  输入待解密的消息： Jr dkhdg, pdnh pb gdb.
	输入移位数：23
	加密后的消息：    Go ahead, make my day.
	可以假定消息的长度不超过80个字符。不是字母的那些字符不要改动。此外，加密时不要改变字母的大小写。
	提示：为解决前面的绕回问题，要以用表达式((ch-'A')+n)%26+'A'计算大写字母的密码，其中ch存储字母，n存储移位计数。(小写字母也需要一个类似的表达式。)
7、完成约瑟夫问题
8、完成九宫格
