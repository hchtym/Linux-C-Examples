while循环

for var in seq
seq命令可以产生一个序列
seq 3 10   从3到10
seq 3 10 2 从3到10，间隔为2

sort命令用于排序
uniq用于删除重复的

expr可以用于计算字符串
使用expr可以用来判断用于计算的字符串是不是整数
if expr 1 + $a >& /dev/null
then 
    echo int
else
    echo not int
fi

正则表达式
cat /ect/passwd |grep '^s'    #匹配行首是s开头的项
cat /ect/passwd | grep 'in$'  #匹配行尾是in的项
cat /ect/passwd |grep '^a.*c$'   # '.'表示匹配一个字符‘*’表示0个或多个；匹配a开头c结尾的项
ls |grep '^[ae].\{1,3\}c$' #'[]'表示枚举任意一项；'{}'表示重复的次数
ls |grep '^$' #匹配一个空行

expr string: '正则表达式'

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
until循环
until表示条件执行失败时进行循环

~~~~~~~~~~~~~~~~~~~~~~~~~~
case分支语句
#!/bin/bash
case $var in 
    mod1)
	cmd
	cmd;;    #break
    mod2)
	cmd;;
    *)               #default
	cmd;;


~~~~~~~~~~~~
$RANDOM 产生一个随机数
echo $RANDOM

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>>>>长度运算:
${#变量名}    #返回变量的字符个数

>>>>替换运算
${变量 :- 变量或值}    #如果变量不存在，则返回‘-’后面的值

${变量 := 变量或值}    #如果变量不存在，则返回‘=’后面的值，并且创建变量，其值为‘=’后的值

${变量 :+ 变量或值}    #如果变量存在，则返回‘+’后面的值

${变量 :? 消息提示}    #如果变量不存在，则中终止并打印消息提示

>>>>字符串处理运算
取子串      ${字符串:n1:n2}

删除字符串	${数组#匹配模式}   #返回匹配前字符串
	                ${数组##匹配模式}  #返回删除匹配字符串后的字符串
删除末尾		${字符串%匹配模式}  #返回去掉匹配尾巴后的字符串
			${字符串%%匹配模式}
替换匹配		${字符串/匹配模式/替换字符串}	#替换第一个
			${字符串%匹配模式%替换字符串}   #替换所有

#!/bin/bash
#说明字符运算符号的使用
str="hello shell programming"
echo ${str:5}
echo ${str:5:5}
arr=(hello shell prorgamming)
echo ${arr[*]##p*}
echo ${str%%pro*}

24dayshell$ sh string.sh 
shell programming
shel
hello shell
hello shell

