>>>>>>>>
C++是强类型语言，对类型的检查更严格
C++“支持”面向对象编程
       支持泛型编程
       支持异常
       支持运算符重载

>>>>>>>>
C++之父的建议：
      在C++中不要使用宏；
              用const或enum定义明显的常量,用inline避免函数调用的额外开销，用模板去刻画一族函数或类型，
              用namespace去避免命名冲突
      不要在你需要变量之前去声明，以保证你能立即对他进行初始化
      不要使用malloc，new运算符会做的更好；new说明C++本身就支持内存分配
      避免使用void*，指针算术，联合和强制，大多数情况下，强制都是设计错误的指示器
      尽量少使用数组和C风格的字符串，标准库中的string和vector可以简化程序
      更加重要的是，试着将程序考虑为一组由类和对象表示的相互作用的概念，而不是一堆数据结构的拨弄

>>>>>>>>>>>
C语言的标准库libstdc.so,所有的C库的代码全都放在这个里面
C++语言的标准库是libstdc++.so           libstdc.so       可能是/usr/lib/libgcc_s.so
gcc -Wall hello.cpp -lstdc++       
libstdc++.so   /usr/lib/libstdc++.so  or /usr/lib64/libstdc++.so   976KB左右

>>>>>>>>>>>
匿名变量
匿名变量可以直接使用:
union
{
   int x;
   char xx[4];
};
仅在C++里面支持匿名联合。

C++里面自带了bool，true和false；C++里面有4种逻辑假：false,0,'\0',NULL四大假。
除了这四大假以外，所有的数据赋值给bool变量都是逻辑真。

enmu在C中可以当作int数用，但是在C++里面被实现为一个专门的类型。

C++里面没有函数的隐式声明，如果调用一个没有声明的函数就会出现错误。

C++无参函数默认就是f(void)无参函数，不可以传递参数。

C++中的函数必须具有返回类型。

哑元:代指那些仅是占位用的无名形参变量，可用于向前函数兼容或前++和后++重载时。
void fc(int)
{
    cout<<"fc(int)"<<endl;
}

>>>>>>>>>>>>>
类型转换
()
static_cast<type>
reinterpret_cast<type>
const_cast<>
dynamic_cast<>

>>>>>>>>>>>>
内存动态分配
new
delete