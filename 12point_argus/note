>>>>>>>>>>>>
引用：引用就是变量的别名
引用只能初始化一次，以后就不可以修改，成为其他变量的引用。引用实际上是
使用指针来实现的。
作为函数的参数时，尽量要使用const的引用。
可以这样理解:
                        int& r=x;-------------int* const r=x;

>>>>>>>>>>>>
函数重载
如果没有精确匹配的函数，则会自动提升参数的类型，转而调用参数类型接近的函数；
比如，参数为char，但是只有一个int型的函数，则会提升为int然后调用int型参数的函数。

>>>>>>>>>>>>
函数参数的默认值

>>>>>>>>>>>>
内联函数
在C99标准中就有inline内联函数，也就是说C语言中也有inline内联函数。
在类里面定义的函数，会自动处理为内联函数。

补充：
类里面的inline函数，对于类来说必须是可见的，也就是说，inline成员方法的实现，要和类的定义在一个文件内。

>>>>>>>>>>>>
成员指针
成员指针：即成员的地址，是一个相对地址。
struct Date{int y;int m;int d;};   
int Date::* p=&Date::y;
 cout<< ds[ i ].*p<<" ";   //cout<<(ds+i)->*p<<"  ";

同样，也可以定义成员函数的指针：
void (date::*pf)(  ) =&date::show;
(da[0].*pf)();
((da+i)->*p)();   //两种调用方式

>>>>>>>>>>
C语言结构体中不可以定义成员函数，C99标准也不能。
C++语言中就可以在结构体中定义成员函数

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
面向对象编程
 
>>>>>>>>>>>>>>>>>>>>>
类
